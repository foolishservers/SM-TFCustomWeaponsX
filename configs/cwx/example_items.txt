// This is an example weapon configuration file containing two example weapons.
// For more detailed and up-to-date documentation, visit the following page:
// https://github.com/nosoop/SM-TFCustomWeaponsX/wiki/Getting-Started-(for-Server-Operators)#creating-a-new-item-from-scratch

// two or more forward slashes indicates a comment - you cannot use /* multiline comments */ here
"Items"
{
	"{e86f9513-1454-49dd-97b1-ce1faab2f89e}" // we just need a unique identifier here - this is not necessarily a UUID
	{
		//// item name, to be displayed in any menus
		"name"			"The Airblaster"
		
		//// "inherits" is special:  it resolves to item definition and determines classname, item slots, quality
		//// if provided, this must correspond to the value of a "name" key in items_game.txt
		"inherits"		"TF_WEAPON_FLAMETHROWER"
		
		//// "inherits" automatically determines this if provided, but
		//// sometimes you want a different itemdef (e.g. hiding weapon viewmodels with fists)
		// "defindex"	"21"
		
		//// if not using "inherits", full classname must be provided
		//// no magic bullshit happens in the backend (except translation based on player class)
		// "item_class"	"tf_weapon_flamethrower"
		
		//// manually defined loadout slot, for listing in the correct menu and for inventory storage
		//// "inherits" automatically determines this if provided, but if this section is also present, it will be used in place of what "inherits" would provide
		//// if manually defined, this MUST match the loadout slot for the item classname!
		//// you *cannot* specify your own slot and expect a weapon to work in a different slot than it was designed for
		// "used_by_classes"
		// {
		//     "scout" "primary" // primary weapon for scout
		// }
		
		//// whether or not static (item schema) attributes are preserved
		//// 0: only use attributes applied at runtime 
		//// 1: preserves static attributes
		"keep_static_attrs"		"1"
		
		//// contains official attributes
		"attributes_game"
		{
			"airblast_destroy_projectile"				"1"
			"airblast cost decreased"					"0.2"
		}
		
		//// custom attributes by cattr -- this just gets copied into Custom Attributes' core, nested structures and all
		//// you will need plugins that implement these attributes - CWX does not come with any preinstalled
		//// they are linked in the wiki page here: https://github.com/nosoop/SM-TFCustAttr/wiki/Public-Custom-Attribute-Sets
		"attributes_custom"
		{
			"airblast projectiles restores health"		"30"
			"airblast projectiles adds self condition"	"condition=32 duration=10"
			//// commented out below in case the below attribute exists
			//// if the attribute exists, you will need to ensure the associated resources are cached
			// "clientmodel override"					"models/weapons/c_models/c_firkin_flamer/c_firkin_flamer.mdl"
		}
		
		//// item description, appears upon equipping in its own menu, useful for displaying weapon stats to the user
		"description"	"(i) Airblast destroys projectiles
						(+) Airblasting projectiles restores 30 health on wearer
						(+) Airblasting projectiles gives speed boost for 10 seconds
						(+) 20% airblast cost"
	}
	"{e1bc546e-b0b7-41c5-bc5e-8257406d575c}"
	{
		// here's a condensed example
		"name"			"The 'Grenade Launcher' Launcher"
		"inherits"		"The Iron Bomber"
		"attributes_game"
		{
			// string attributes work too, as long as the client doesn't read them
			// you can't set things like "custom name attr"
			"custom projectile model"					"models/weapons/c_models/c_grenadelauncher/c_grenadelauncher.mdl"
		}
		"description"	"(i) Weapon uses Grenade Launcher projectiles"
	}
}
